"""
Задача на программирование: калькулятор
У вас есть примитивный калькулятор, 
который умеет выполнять всего три операции с 
текущим числом x x x: заменить x x x на 2x 2x 2x, 3x 3x 3x 
или x+1 x+1 x+1. По данному целому числу 
1≤n≤105 1 \le n \le 10^5 1≤n≤105 
определите минимальное число операций k k k, 
необходимое, чтобы получить n n n из 1. 
Выведите k k k и последовательность промежуточных чисел.

Sample Input 1:
1

Sample Output 1:
0
1 

Sample Input 2:
5

Sample Output 2:
3
1 2 4 5 

Sample Input 3:
96234

Sample Output 3:
14
1 3 9 10 11 22 66 198 594 1782 5346 16038 16039 32078 96234 


"""

# Решение

def rechner(n):
    INF =  10 ** 10
    F = [0] + [INF for i in range(n - 1)] # Бесконечнось
    prev = [0 for i in range(n)]
    ans = [n]                  # Для восстановления ответа, сразу записываем число из ввода.
    for i in range(1, n + 1): # Пробегаем все числа от 1 до n
        for j in (i * 2, i * 3, i + 1): 
            if j - 1 < n and F[i - 1] + 1 < F[j - 1]: # Проверяем что не вышли за пределы массива
                F[j - 1] = F[i - 1] + 1   # Сравниваем новое количество шагов и записываем
                prev[j - 1] = i   # Запоминаем с какого числа пришли
    while n > 1:      # Восстанавливаем ответ
        ans.append(prev[n - 1])
        n = prev[n - 1]
    print(len(ans) - 1)
    return ans[::-1]

def main():
    n = int(input())
    print(*list(rechner(n)), sep=' ')

if __name__ == '__main__':
    main()